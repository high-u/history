<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>history</title>
    <link>https://history-bqtn.onrender.com/</link>
    <description>Recent content on history</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 24 Mar 2021 09:42:00 +0900</lastBuildDate><atom:link href="https://history-bqtn.onrender.com/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Appsmith 起動した</title>
      <link>https://history-bqtn.onrender.com/posts/2021-03-24-appsmith/</link>
      <pubDate>Wed, 24 Mar 2021 09:42:00 +0900</pubDate>
      
      <guid>https://history-bqtn.onrender.com/posts/2021-03-24-appsmith/</guid>
      <description>公式ドキュメント見て Mac にインストール ここ 見て、Mac 上で実行したがダメだった。
しかし、スクリプトで作成された docker-compose.yml を up したら動いた（とりあえず立ち上がったまでの確認だけど）。 ポートだけ書き換えた。
docker-compose.yml の一部抜粋
version: &amp;#34;3.7&amp;#34; services: nginx: image: index.docker.io/appsmith/appsmith-editor env_file: ./docker.env ports: - - &amp;#34;080:80&amp;#34; + - &amp;#34;8080:80&amp;#34; - - &amp;#34;443:443&amp;#34; + - &amp;#34;8443:443&amp;#34;  volumes: - ./data/nginx/app.conf.template:/nginx.conf.template - ./data/certbot/conf:/etc/letsencrypt - ./data/certbot/www:/var/www/certbot command: &amp;#34;/bin/sh -c &amp;#39;while :; do sleep 6h &amp;amp; wait $${!}; nginx -s reload; done &amp;amp; /start-nginx.sh&amp;#39;&amp;#34; depends_on: - appsmith-internal-server labels: com.centurylinklabs.watchtower.enable: &amp;#34;true&amp;#34; networks: - appsmith 動いた時の構成 .</description>
    </item>
    
    <item>
      <title>PostgREST 弄ってみた</title>
      <link>https://history-bqtn.onrender.com/posts/2021-03-23-postgrest/</link>
      <pubDate>Wed, 24 Mar 2021 00:49:00 +0900</pubDate>
      
      <guid>https://history-bqtn.onrender.com/posts/2021-03-23-postgrest/</guid>
      <description>PostgREST 弄ってみた 起動と停止 docker-compose up -d docker-compose down --volumes --remove-orphans ファイル ./.env
POSTGRES_USER=postgres POSTGRES_PASSWORD=postgres POSTGRES_DB=postgres DB_ANON_ROLE=anon #DB_ANON_ROLE=postgres DB_SCHEMA=public docker-compose.yaml
version: &amp;#34;3&amp;#34; services: postgres: container_name: postgres user: &amp;#34;root:root&amp;#34; image: postgres:11-alpine ports: - &amp;#34;5432:5432&amp;#34; environment: - POSTGRES_USER=${POSTGRES_USER} - POSTGRES_PASSWORD=${POSTGRES_PASSWORD} - POSTGRES_DB=${POSTGRES_DB} - DB_ANON_ROLE=${DB_ANON_ROLE} - DB_SCHEMA=${DB_SCHEMA} volumes: - ./initdb:/docker-entrypoint-initdb.d networks: - postgrest-backend restart: always postgrest: container_name: postgrest image: postgrest/postgrest:latest ports: - &amp;#34;3000:3000&amp;#34; environment: - PGRST_DB_URI=postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB} - PGRST_DB_SCHEMA=${DB_SCHEMA} - PGRST_DB_ANON_ROLE=${DB_ANON_ROLE} networks: - postgrest-backend restart: always networks: postgrest-backend: driver: bridge .</description>
    </item>
    
    <item>
      <title>Hello World</title>
      <link>https://history-bqtn.onrender.com/posts/hello-world/</link>
      <pubDate>Sat, 20 Mar 2021 19:04:16 +0900</pubDate>
      
      <guid>https://history-bqtn.onrender.com/posts/hello-world/</guid>
      <description>Hello World このブログを作った時のメモ  xxx yyy zzz  </description>
    </item>
    
  </channel>
</rss>
